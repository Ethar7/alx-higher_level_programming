The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
-------------------------------

Import module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test normal matrix:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Test one element:
    >>> matrix_divided([[2]], 2)
    [[1.0]]

Test element divided by negative:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], -2)
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

Test divide by inf:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test by nan:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('nan'))
    [[nan, nan, nan], [nan, nan, nan]]

Test unmodefied matrix:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
    >>> matrix[1][1]
    5

Test divide by zero:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Test 1st arg none:
    >>> matrix_divided(None, 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 2nd arg none:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
    Traceback (most recent call last):
    ...
    div must be a number

Test matrix non int or float:
    matrix_divided([[1, "fool", 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test empty matrix:
    >>> matrix_divided([[]], 10)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test empty:
    >>> matrix_divided([], 10)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix with different rows
    >>> matrix_divided([[1, 2, 3], [5, 6]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Test 2nd arg str:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "str")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Test 1st arg str:
    >>> matrix_divided("foo", 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test missing 1 arg:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
